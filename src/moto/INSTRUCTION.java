/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package moto;

import java.awt.AWTException;
import java.awt.Font;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static moto.BAR.ROM;

/**
 *
 * @author admin
 */
 
public class INSTRUCTION extends javax.swing.JFrame {

    /**
     * Creates new form INSTRUCTION
     */
    Robot robo ;
   public static int BRA=0;
   public static int LC=0;
     ROM CHE = new ROM();
    public INSTRUCTION() {
        initComponents();
         SETICOn();
         
         try {
        robo=new Robot();
    } catch (AWTException ex) {
        Logger.getLogger(VALEUR.class.getName()).log(Level.SEVERE, null, ex);
    }
              setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TEXT = new javax.swing.JTextArea();
        EXIT = new javax.swing.JButton();
        OK = new javax.swing.JButton();
        TERM = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TEXT.setColumns(20);
        TEXT.setRows(5);
        jScrollPane1.setViewportView(TEXT);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, -1, 274));

        EXIT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moto/ICONS/level_down_60.png"))); // NOI18N
        EXIT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EXITMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EXITMouseExited(evt);
            }
        });
        EXIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXITActionPerformed(evt);
            }
        });
        getContentPane().add(EXIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 60, 30));

        OK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moto/ICONS/note_60.png"))); // NOI18N
        OK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                OKMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                OKMouseExited(evt);
            }
        });
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });
        getContentPane().add(OK, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 50, 50));

        TERM.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TERM.setForeground(new java.awt.Color(255, 0, 0));
        TERM.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(TERM, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 330, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EXITMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EXITMouseEntered
TERM.setHorizontalAlignment(TERM.CENTER);
TERM.setText("Quitter l'editeur");

    }//GEN-LAST:event_EXITMouseEntered

    private void EXITMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EXITMouseExited
      
TERM.setHorizontalAlignment(TERM.CENTER);
TERM.setText("");

    }//GEN-LAST:event_EXITMouseExited

    private void OKMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OKMouseEntered
TERM.setFont(new Font("Segoe UI", Font.BOLD,12));
TERM.setHorizontalAlignment(TERM.LEADING);
TERM.setText("Prendre en compte ces modifications dans le simulateur");
    }//GEN-LAST:event_OKMouseEntered

    private void OKMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OKMouseExited
   TERM.setFont(new Font("Segoe UI", Font.BOLD,18));

       TERM.setHorizontalAlignment(TERM.CENTER);
TERM.setText("");
    }//GEN-LAST:event_OKMouseExited

    private void EXITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXITActionPerformed
    this.dispose();
    }//GEN-LAST:event_EXITActionPerformed

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
    String B=TEXT.getText();
     BAR.PASA=0;
     PROGRAMME INIT=new PROGRAMME("INIT",0);
     
  PROGRAMME.SELECT(BAR.PASA);
       if(!B.isEmpty())
      {
          LC=0;
          int i=0;
          int x=0;
          String V[]=B.split("\n");
          String CH[]=new String[3];
         
          for(String G:V)
          {
              
              if(G.contains("#"))
              {
                 
                  String Q[]=G.split("#+[\\$]");
                  System.out.println(Q[0]);
                  Q[0]=Q[0].trim();
                  if(Q.length>1)
                  {
                      
       Q[1]=Q[1].trim();
                    
                  }
                  
                  if(Q[0].equalsIgnoreCase("lda"))
                    CH[0]="86" ; 
                  else if(Q[0].equalsIgnoreCase("ldb"))
                  CH[0]="C6";
                  else if(Q[0].equalsIgnoreCase("ldx"))
                      CH[0]="8E";
                  else if(Q[0].equalsIgnoreCase("ldy"))
                      CH[0]="108E";
                  else if(Q[0].equalsIgnoreCase("STA"))
                      CH[0]="B7";
                   else if(Q[0].equalsIgnoreCase("STB"))
                       CH[0]="D7";
                  else if(Q[0].equalsIgnoreCase("STX"))
                      CH[0]="BF";
                  else if(Q[0].equalsIgnoreCase("STY"))
                     
                      CH[0]="109F";
                  else if(Q[0].equalsIgnoreCase("ADDA"))
                      CH[0]="8B";
                   else if(Q[0].equalsIgnoreCase("ADDB"))
                      CH[0]="CB";
                   else if(Q[0].equalsIgnoreCase("SUBA"))
                       CH[0]="80";
                   else if(Q[0].equalsIgnoreCase("SUBB"))
                       CH[0]="C0";
                  
                   
                  else if (Q[0].equalsIgnoreCase("end") || Q[0].equalsIgnoreCase("SWI"))
                      CH[0]="3F";

                  if( !Q[0].equalsIgnoreCase("lda") &&!Q[0].equalsIgnoreCase("ldb") &&!Q[0].equalsIgnoreCase("ldx") && !Q[0].equalsIgnoreCase("ldy") && !Q[0].equalsIgnoreCase("sta") && !Q[0].equalsIgnoreCase("stb")&& !Q[0].equalsIgnoreCase("stx") && !Q[0].equalsIgnoreCase("sty")&&  !Q[0].equalsIgnoreCase("ADDA") && !Q[0].equalsIgnoreCase("ADDB") && !Q[0].equalsIgnoreCase("SUBA") && !Q[0].equalsIgnoreCase("SUBB") )
                  {
                      JOptionPane.showMessageDialog(null, "ERROR IN  CODE", "ERROR SYNTAX", JOptionPane.ERROR_MESSAGE);
                      BAR.CLOSE();
                      break;
                  }
                  if(Q.length>1 && Q[1].length()>4 || (Q[1].length()>2 && Q[1].length()<4))
                  {
                     JOptionPane.showMessageDialog(null, "ERROR IN  CODE", "ERROR SYNTAX", JOptionPane.ERROR_MESSAGE);
                     BAR.CLOSE();
                     break;
                  }
                  
                  
                  
                
              }
              else if(!G.contains("#"))
              {
                 if(G.contains("$"))
                 {
                 String L[]=G.split("[\\$]");
                  System.out.println(L[0]);
                  
                  L[0]=L[0].trim();
                  if(L.length>1)
                  L[1]=L[1].trim();
                  if(L[0].equalsIgnoreCase("lda"))
                    CH[0]="B6" ; 
                  else if(L[0].equalsIgnoreCase("ldb"))
                  CH[0]="F6";
                  else if(L[0].equalsIgnoreCase("ldx"))
                      CH[0]="BE";
                  else if(L[0].equalsIgnoreCase("ldy"))
                      CH[0]="10BE";
                  else if(L[0].equalsIgnoreCase("STA"))
                      CH[0]="B7";
                   else if(L[0].equalsIgnoreCase("STB"))
                       CH[0]="D7";
                  else if(L[0].equalsIgnoreCase("STX"))
                      CH[0]="BF";
                  else if(L[0].equalsIgnoreCase("STY"))
                      CH[0]="109F";
                else if(L[0].equalsIgnoreCase("ADDA") )
                      CH[0]="BB";
                   else if(L[0].equalsIgnoreCase("ADDB"))
                      CH[0]="FB";
                     else if(L[0].equalsIgnoreCase("SUBA"))
                       CH[0]="B0";
                   else if(L[0].equalsIgnoreCase("SUBB"))
                       CH[0]="F0";
                  
                   
                  else if (L[0].equalsIgnoreCase("end") || L[0].equalsIgnoreCase("SWI"))
                      CH[0]="3F";

                  if( !L[0].equalsIgnoreCase("lda")   && !L[0].equalsIgnoreCase("ldb") &&!L[0].equalsIgnoreCase("ldx") && !L[0].equalsIgnoreCase("ldy") && !L[0].equalsIgnoreCase("sta") && !L[0].equalsIgnoreCase("stb")&& !L[0].equalsIgnoreCase("stx") && !L[0].equalsIgnoreCase("sty") && !L[0].equalsIgnoreCase("ADDA") && !L[0].equalsIgnoreCase("ADDB") && !L[0].equalsIgnoreCase("SUBA") && !L[0].equalsIgnoreCase("SUBB"))
                  {
                      JOptionPane.showMessageDialog(null, "ERROR IN  CODE", "ERROR SYNTAX", JOptionPane.ERROR_MESSAGE);
                      BAR.CLOSE();
                      break;
                  }
                  if(L.length>1 && L[1].length()>4 && (L[1].length()>2 && L[1].length()<4))
                  {
                     JOptionPane.showMessageDialog(null, "ERROR DANS LES NUMBERS", "ERROR SYNTAX", JOptionPane.ERROR_MESSAGE);
                    
                     BAR.CLOSE();
                     
                      break;
                  }
                  
                  
                 }
               /*  G=G.trim();
                  if(!G.equalsIgnoreCase("end") && !G.equalsIgnoreCase("SWI"))
                 {
                     JOptionPane.showMessageDialog(null, "ERROR IN  CODE", "ERROR SYNTAX", JOptionPane.ERROR_MESSAGE);
                     BAR.CLOSE();
                      break;

         
                 }*/
                  
           
              }
              
            
               
              String k=CHE.ADD(i);
              String Y[]=k.split("    ");
             
               if(G.length()>=5)
               {
                   if(G.contains("#"))
                   { 
                   String X[]=G.split("#+[\\$]");
                   X[0]=X[0].trim();
                   String LAST=X[0].substring(X[0].length()-1);
                   System.out.println(LAST);
                   
                  if(X[1].length()==4)
                  {
                      int index=0;
                      int indey=0;
                      
                      X[1]=X[1].trim();
                      String XC[]=new String[3];
                      XC[0]=X[1].substring(0,2);
                      XC[1]=X[1].substring(2);
                    
              for(int j=i;j<=i+2;j++)
                  
              {
                  String H=CHE.ADD(j);
                  H.trim();
                  String ADDR[]= H.split("    ");
                  String CK=ADDR[0]+"    "+CH[index++];
                  if(j<i+2 )
                   CH[index]=XC[indey++];
                  if (j==i)
                  {
                   String PROG= ADDR[0]+"           "+G;
                new PROGRAMME(PROG);
                LC++;
                  }
               System.out.println(CK);
                BRA=j;
                        ROM BN=new ROM(CK);
                       


              }
                i=i+3; 
              
                
               
                  
                  
               }
                  if(X[1].length()==2)
                  {
                      int index=0;
                      int indey=0;
                      X[1]=X[1].trim();
                      String XC[]=new String[3];
                      XC[0]=X[1].substring(0,2);
                       for(int j=i;j<=i+1;j++)
                  
              {
                  
                  String H=CHE.ADD(j);
                  H.trim();
                  
                  String ADDR[]= H.split("    ");
                  String CK=ADDR[0]+"    "+CH[index++];
                if (j==i)
                  {
                      String PROG= ADDR[0]+"           "+G;
                new PROGRAMME(PROG);
                
                LC++;
                  }
                  if(j<i+1)
                   CH[index]=XC[indey++];
                 
               System.out.println(CK);
                BRA=j;
                        ROM BN=new ROM(CK);
                       


              }
                      
                     i=i+2;
                  }
                     
                  } 
                   else if(!G.contains("#"))
                   {
                       
                         String X[]=G.split("[\\$]");
                   X[0]=X[0].trim();
                   String LAST=X[0].substring(X[0].length()-1);
                   System.out.println(LAST);
                   
                  if(X[1].length()==4)
                  {
                      int index=0;
                      int indey=0;
                      
                      X[1]=X[1].trim();
                      String XC[]=new String[3];
                      XC[0]=X[1].substring(0,2);
                      XC[1]=X[1].substring(2);
                    
              for(int j=i;j<=i+2;j++)
                  
              {
                  String H=CHE.ADD(j);
                  H.trim();
                  String ADDR[]= H.split("    ");
                  String CK=ADDR[0]+"    "+CH[index++];
                  if(j<i+2 )
                   CH[index]=XC[indey++];
                  if (j==i)
                  {
                   String PROG= ADDR[0]+"           "+G;
                new PROGRAMME(PROG);
                LC++;
                  }
               System.out.println(CK);
                BRA=j;
                        ROM BN=new ROM(CK);
                       


              }
                i=i+3; 
              
                
               
                  
                  
               }
                  if(X[1].length()==2)
                  {
                      int index=0;
                      int indey=0;
                      X[1]=X[1].trim();
                      String XC[]=new String[3];
                      XC[0]=X[1].substring(0,2);
                       for(int j=i;j<=i+1;j++)
                  
              {
                  
                  String H=CHE.ADD(j);
                  H.trim();
                  
                  String ADDR[]= H.split("    ");
                  String CK=ADDR[0]+"    "+CH[index++];
                if (j==i)
                  {
                      String PROG= ADDR[0]+"           "+G;
                new PROGRAMME(PROG);
                
                LC++;
                  }
                  if(j<i+1)
                   CH[index]=XC[indey++];
                 
               System.out.println(CK);
                BRA=j;
                        ROM BN=new ROM(CK);
                       


              }
                      
                     i=i+2;
                  }  
                    }
                      
                   }
              
                  
               
              
               System.out.println(CHE.ADD(i-1));
               
               
               x++;
               
                 
          }   
  
         if(V.length==x &&( V[V.length-1].equalsIgnoreCase("end") || V[V.length-1].equalsIgnoreCase("SWI")) )
         {
             BRA++;
               String K=CHE.ADD(BRA);
                  K.trim();
                  String ADDR[]= K.split("    ");
                  String CK=ADDR[0]+"    "+"3F";
      ROM BN=new ROM(CK);
      String PROG= ADDR[0]+"           "+V[V.length-1];
                new PROGRAMME(PROG);
                  
        BAR H=new BAR(TEXT.getText());
        BAR.OPEN();
        
             
         }
         else 
         {
             JOptionPane.showMessageDialog(this, "instruction END absente", "ERREUR", JOptionPane.ERROR_MESSAGE);
         }
        
        
        
    }
     else if(B.isEmpty())
        JOptionPane.showMessageDialog(null, "PLEASE INSERT YOUR INSTRUCTIONS ", "ERROR", JOptionPane.ERROR_MESSAGE);
         
        
    }//GEN-LAST:event_OKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(INSTRUCTION.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(INSTRUCTION.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(INSTRUCTION.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(INSTRUCTION.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new INSTRUCTION().setVisible(true);
            }
        });
    }
     private void SETICOn() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ICONS//MOTO.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EXIT;
    public javax.swing.JButton OK;
    private javax.swing.JLabel TERM;
    private javax.swing.JTextArea TEXT;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
